-- Create courses table
CREATE TABLE IF NOT EXISTS courses (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    credits NUMERIC(5,2) NOT NULL DEFAULT 0,
    theory_hours INTEGER,
    practice_hours INTEGER,
    elective BOOLEAN NOT NULL DEFAULT FALSE,
    faculty_id BIGINT,
    major_id BIGINT,
    status VARCHAR(50),
    created_at TIMESTAMP,
    updated_at TIMESTAMP,
    CONSTRAINT fk_courses_faculty FOREIGN KEY (faculty_id) REFERENCES faculties(id) ON DELETE SET NULL,
    CONSTRAINT fk_courses_major FOREIGN KEY (major_id) REFERENCES majors(id) ON DELETE SET NULL
);

-- Create curricula table
CREATE TABLE IF NOT EXISTS curricula (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    major_id BIGINT NOT NULL,
    effective_year INTEGER NOT NULL,
    total_credits NUMERIC(6,2) DEFAULT 0,
    description TEXT,
    status VARCHAR(50),
    created_at TIMESTAMP,
    updated_at TIMESTAMP,
    CONSTRAINT fk_curricula_major FOREIGN KEY (major_id) REFERENCES majors(id) ON DELETE CASCADE
);

-- Create knowledge_blocks table
CREATE TABLE IF NOT EXISTS knowledge_blocks (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    curriculum_id BIGINT NOT NULL,
    parent_block_id BIGINT,
    sequence_order INTEGER NOT NULL DEFAULT 0,
    created_at TIMESTAMP,
    updated_at TIMESTAMP,
    CONSTRAINT fk_kb_curriculum FOREIGN KEY (curriculum_id) REFERENCES curricula(id) ON DELETE CASCADE,
    CONSTRAINT fk_kb_parent FOREIGN KEY (parent_block_id) REFERENCES knowledge_blocks(id) ON DELETE SET NULL
);

-- Create curriculum_items table (mapping curriculum to course)
CREATE TABLE IF NOT EXISTS curriculum_items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    curriculum_id BIGINT NOT NULL,
    course_id BIGINT NOT NULL,
    semester INTEGER NOT NULL,
    credits NUMERIC(5,2) NOT NULL DEFAULT 0,
    is_required BOOLEAN NOT NULL DEFAULT TRUE,
    knowledge_block_id BIGINT,
    sequence_order INTEGER NOT NULL DEFAULT 0,
    notes TEXT,
    created_at TIMESTAMP,
    updated_at TIMESTAMP,
    CONSTRAINT fk_ci_curriculum FOREIGN KEY (curriculum_id) REFERENCES curricula(id) ON DELETE CASCADE,
    CONSTRAINT fk_ci_course FOREIGN KEY (course_id) REFERENCES courses(id) ON DELETE CASCADE,
    CONSTRAINT fk_ci_kb FOREIGN KEY (knowledge_block_id) REFERENCES knowledge_blocks(id) ON DELETE SET NULL
);

-- Helpful uniqueness to prevent duplicate course entries in a curriculum
CREATE UNIQUE INDEX IF NOT EXISTS uq_curriculum_course ON curriculum_items(curriculum_id, course_id);


